diff --git a/node_modules/@mattermost/react-native-network-client/android/src/main/java/com/mattermost/networkclient/NetworkClientPackage.kt b/node_modules/@mattermost/react-native-network-client/android/src/main/java/com/mattermost/networkclient/NetworkClientPackage.kt
index d58511e..d9c96aa 100644
--- a/node_modules/@mattermost/react-native-network-client/android/src/main/java/com/mattermost/networkclient/NetworkClientPackage.kt
+++ b/node_modules/@mattermost/react-native-network-client/android/src/main/java/com/mattermost/networkclient/NetworkClientPackage.kt
@@ -31,6 +31,7 @@ class NetworkClientPackage : TurboReactPackage() {
                         false,
                         false,
                         false,
+                        false,
                         BuildConfig.IS_NEW_ARCHITECTURE_ENABLED
                 ),
                 ApiClientModuleImpl.NAME to ReactModuleInfo(
@@ -39,6 +40,7 @@ class NetworkClientPackage : TurboReactPackage() {
                         false,
                         false,
                         false,
+                        false,
                         BuildConfig.IS_NEW_ARCHITECTURE_ENABLED
                 ),
                 WebSocketClientModuleImpl.NAME to ReactModuleInfo(
@@ -47,6 +49,7 @@ class NetworkClientPackage : TurboReactPackage() {
                         false,
                         false,
                         false,
+                        false,
                         BuildConfig.IS_NEW_ARCHITECTURE_ENABLED
                 )
         )
diff --git a/node_modules/@mattermost/react-native-network-client/lib/typescript/WebSocketClient/index.d.ts b/node_modules/@mattermost/react-native-network-client/lib/typescript/WebSocketClient/index.d.ts
index 1cfd45e..81b8586 100644
--- a/node_modules/@mattermost/react-native-network-client/lib/typescript/WebSocketClient/index.d.ts
+++ b/node_modules/@mattermost/react-native-network-client/lib/typescript/WebSocketClient/index.d.ts
@@ -1,5 +1,6 @@
 import { type EmitterSubscription } from "react-native";
 import type { WebSocketClientConfiguration, WebSocketClientErrorEventHandler, WebSocketClientInterface, WebSocketEventHandler } from "@mattermost/react-native-network-client";
+import type Pusher from 'pusher-js/react-native';
 import { WebSocketReadyState } from "./NativeWebSocketClient";
 /**
  * Configurable WebSocket client
@@ -24,8 +25,8 @@ declare class WebSocketClient implements WebSocketClientInterface {
     onClientError: (callback: WebSocketClientErrorEventHandler) => void;
     invalidate: () => Promise<void>;
 }
-declare function getOrCreateWebSocketClient(url: string, config?: WebSocketClientConfiguration, clientErrorEventHandler?: WebSocketClientErrorEventHandler): Promise<{
-    client: WebSocketClient;
+declare function getOrCreateWebSocketClient(url: string, serverUrl: string, config?: WebSocketClientConfiguration): Promise<{
+    client: Pusher;
     created: boolean;
 }>;
 export { getOrCreateWebSocketClient };
diff --git a/node_modules/@mattermost/react-native-network-client/src/WebSocketClient/index.tsx b/node_modules/@mattermost/react-native-network-client/src/WebSocketClient/index.tsx
index c4389f2..bc84af8 100644
--- a/node_modules/@mattermost/react-native-network-client/src/WebSocketClient/index.tsx
+++ b/node_modules/@mattermost/react-native-network-client/src/WebSocketClient/index.tsx
@@ -3,6 +3,7 @@
 
 import { NativeEventEmitter, type EmitterSubscription } from "react-native";
 import isURL from "validator/es/lib/isURL";
+import Pusher from 'pusher-js/react-native';
 
 import type {
     WebSocketClientConfiguration,
@@ -19,7 +20,7 @@ import NativeWebSocketClient, {
 
 const Emitter = new NativeEventEmitter(NativeWebSocketClient);
 
-const CLIENTS: { [key: string]: WebSocketClient } = {};
+const CLIENTS: { [key: string]: Pusher } = {};
 const CREATING_CLIENT: { [key: string]: boolean } = {};
 
 /**
@@ -146,13 +147,9 @@ class WebSocketClient implements WebSocketClientInterface {
 
 async function getOrCreateWebSocketClient(
     url: string,
+    serverUrl: string,
     config: WebSocketClientConfiguration = {},
-    clientErrorEventHandler?: WebSocketClientErrorEventHandler,
-): Promise<{ client: WebSocketClient; created: boolean }> {
-    if (!isValidWebSocketURL(url)) {
-        throw new Error(`"${url}" is not a valid WebSocket URL`);
-    }
-
+): Promise<{ client: Pusher; created: boolean }> {
     let created = false;
     let client = CLIENTS[url];
     if (!client) {
@@ -161,11 +158,19 @@ async function getOrCreateWebSocketClient(
         }
         CREATING_CLIENT[url] = true;
         created = true;
-        client = new WebSocketClient(url);
-        if (clientErrorEventHandler) {
-            client.onClientError(clientErrorEventHandler);
-        }
-        await NativeWebSocketClient.ensureClientFor(url, config);
+        client = new Pusher('kchat-key', {
+            wsHost: url,
+            httpHost: url,
+            authEndpoint: `${serverUrl}/broadcasting/auth`,
+            auth: { headers: config.headers },
+            enabledTransports: ['ws', 'wss'],
+            disabledTransports: ['xhr_streaming', 'xhr_polling', 'sockjs'],
+            activityTimeout: 10000,
+            pongTimeout: 5000,
+            unavailableTimeout: 3000,
+            cluster: 'eu',
+        });
+        await NativeWebSocketClient.ensureClientFor(`wss://${url}`, config);
         CLIENTS[url] = client;
         delete CREATING_CLIENT[url];
     }
