---
name: build-ios-release

on:
  push:
    branches:
      - build-release-[0-9]+
      - build-release-ios-[0-9]+
      - build-release-sim-[0-9]+

env:
  NODE_VERSION: 20.11.0
  TERM: xterm

jobs:
  test:
    runs-on: [ self-hosted, macOS ]
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
      - name: ci/test
        uses: ./.github/actions/test

  build-and-deploy-ios-release:
    runs-on: [ self-hosted, macOS ]
    if: ${{ !contains(github.ref_name, 'release-sim') }}
    needs:
      - test
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1

      - name: ci/prepare-ios-build
        uses: ./.github/actions/prepare-ios-build
        env:
          MATTERMOST_BUILD_GH_TOKEN: "${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}"

      - name: ci/output-ssh-private-key
        shell: bash
        run: |
          SSH_KEY_PATH=~/.ssh/id_ed25519
          mkdir -p ~/.ssh
          echo -e '${{ secrets.MM_MOBILE_PRIVATE_DEPLOY_KEY }}' > ${SSH_KEY_PATH}
          chmod 0600 ${SSH_KEY_PATH}
          ssh-keygen -y -f ${SSH_KEY_PATH} > ${SSH_KEY_PATH}.pub

      - name: ci/build-and-deploy-ios-release
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.MM_MOBILE_RELEASE_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.MM_MOBILE_RELEASE_AWS_SECRET_ACCESS_KEY }}"
          MATTERMOST_WEBHOOK_URL: "${{ secrets.MM_MOBILE_RELEASE_MATTERMOST_WEBHOOK_URL }}"
          FASTLANE_TEAM_ID: "${{ secrets.MM_MOBILE_FASTLANE_TEAM_ID }}"
          IOS_API_ISSUER_ID: "${{ secrets.MM_MOBILE_IOS_API_ISSUER_ID }}"
          IOS_API_KEY: "${{ secrets.MM_MOBILE_IOS_API_KEY }}"
          IOS_API_KEY_ID: "${{ secrets.MM_MOBILE_IOS_API_KEY_ID }}"
          MATCH_GIT_URL: "${{ secrets.MM_MOBILE_MATCH_GIT_URL }}"
          MATCH_PASSWORD: "${{ secrets.MM_MOBILE_MATCH_PASSWORD }}"
          SENTRY_AUTH_TOKEN: "${{ secrets.MM_MOBILE_SENTRY_AUTH_TOKEN }}"
          SENTRY_DSN_IOS: ${{ secrets.MM_MOBILE_RELEASE_SENTRY_DSN_IOS }}
        run: |
          echo "::group::Build"
          bundle exec fastlane ios build --env ios.release
          echo "::endgroup::"
          echo "::group::Deploy to TestFlight"
          bundle exec fastlane ios deploy file:"${{ github.workspace }}/*.ipa" --env ios.release
          echo "::endgroup::"
        working-directory: ./fastlane

      - name: ci/upload-ios-release-build
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: ios-build-release-${{ github.run_id }}
          path: "*.ipa"

